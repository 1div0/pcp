pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: Prepare
    jobs:
      - job: prepare_matrix
        steps:
        - bash: echo "##vso[task.setVariable variable=matrix;isOutput=true]{'fedora30':{'distribution':'fedora30'}}"
          name: matrix_step
      - job: prepare_image
        dependsOn: prepare_matrix
        displayName: Prepare image
        strategy:
          matrix: $[ dependencies.prepare_matrix.outputs['matrix_step.matrix'] ]
        steps:
          - checkout: self
            fetchDepth: 1
          - script: |
              echo test
            displayName: Apply Ansible patches
          - script: |
              ansible-playbook -v image.yml -e "distribution=$(distribution) pcp_dependencies=yes build_id=$(Build.BuildId) pcp_commit=$(Build.SourceVersion)"
            displayName: Create images

  - stage: Build
    jobs:
      - job: build
        displayName: Build on
        strategy:
          matrix:
            fedora30:
        steps:
          - checkout: self
            fetchDepth: 1
          - script: |
              echo test
            displayName: Apply Ansible patches
          - script: |
              ansible-playbook -v -i inventory build.yml -e "distribution=$(distribution) pcp_dependencies=yes build_id=$(Build.BuildId) pcp_commit=$(Build.SourceVersion)"
            displayName: Build

  - stage: Test
    jobs:
      - job: test
        displayName: Test on
        strategy:
          matrix:
            fedora30:
        steps:
          - checkout: self
            fetchDepth: 1
          - script: |
              echo test
            displayName: Apply Ansible patches
          - script: |
              ansible-playbook -v -i inventory test.yml -e "distribution=$(distribution) pcp_dependencies=yes build_id=$(Build.BuildId) pcp_commit=$(Build.SourceVersion)"
            displayName: Run QA suite

