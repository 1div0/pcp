stages:
- stage: Build
  jobs:
  - job: build
    displayName: Build on
    strategy:
      matrix:
        ${{ each distribution in parameters.distributions }}:
          ${{ distribution }}:
            distribution: ${{ distribution }}
    pool:
      vmImage: "ubuntu-latest"
    steps:
    - checkout: none
    - script: |
        if [ "$(preinst_builddeps)" = "true" ]; then
          echo "##vso[task.setvariable variable=agent_image_name]agent-image-$(distribution)-deps"
        else
          echo "##vso[task.setvariable variable=agent_image_name]agent-image-$(distribution)"
        fi
      name: setup_env
      displayName: Setup Environment
    - task: AzureCLI@2
      displayName: Create scale set
      inputs:
        connectedServiceNameARM: azureResourceManagerConnection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
            az vmss create \
              --name build-$(Build.BuildId)-$(distribution) \
              --resource-group PCP_Agents \
              --computer-name-prefix build-$(Build.BuildId)-$(distribution)-agent \
              --instance-count 2 --lb "" --image $(agent_image_name) \
              --admin-username pcp --ssh-key-values "$(ssh_public_keys)" \
              --plan-name fedora30 --plan-product fedora --plan-publisher tunnelbiz \
              --tags "Build.BuildId=$(Build.BuildId)"

  - job: build
    dependsOn: start_agent
    displayName: Build on
    strategy:
      matrix:
        ${{ each distribution in parameters.distributions }}:
          ${{ distribution }}:
            distribution: ${{ distribution }}
    cancelTimeoutInMinutes: 11
    pool:
      name: default
      cancelTimeoutInMinutes: 10
      demands:
      - "Agent.Image -equals $(agent_image_name)"
      - Build.BuildId -equals $(Build.BuildId)
    steps:
    - checkout: self
      fetchDepth: 1
    - script: pwd && touch dummy.txt && echo rpm content > pcp-5.0.0.rpm
      displayName: Build Performance Co-Pilot
    - script: ansible-playbook pipelines/playbooks/collect_artifacts.yml
      displayName: Move artifacts
    - task: PublishPipelineArtifact@1
      inputs:
        artifact: pcp-build-$(distribution)
        path: $(System.DefaultWorkingDirectory)/artifacts
