#!/bin/sh
# PCP QA Test No. 1286
# Exercise the BCC PMDA netproc hits module - install, remove and values.
#
# Copyright (c) 2020 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.bcc

_pmdabcc_check
_pmdabcc_require_kernel_version 4 6
which curl >/dev/null 2>&1 || _notrun "No curl binary installed"

status=1       # failure is the default!
signal=$PCP_BINADM_DIR/pmsignal
$sudo rm -rf $tmp.* $seq.full

target_ip=1.1.1.1

_value_filter()
{
    awk '/"'"$1"'"/ && /value [1-9][0-9]*/ {print "OK"; exit}'
}

_prepare_pmda bcc
trap "_pmdabcc_cleanup; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

# real QA test starts here
cat <<EOF | _pmdabcc_install
[pmda]
modules = netproc
prefix = bcc.
[netproc]
module = netproc
cluster = 40
remove_stopped_processes = False
EOF
_pmdabcc_wait_for_metric

# Generate system activity for the BCC netproc module
curl -s http://${target_ip} > /dev/null &
curlpid=$!
echo "curl pid: ${curlpid}" >> "$seq.full"
wait ${curlpid}

for metric in bcc.proc.io.net.perpid.tcp.in.packets \
              bcc.proc.io.net.perpid.tcp.in.bytes \
              bcc.proc.io.net.perpid.tcp.out.packets \
              bcc.proc.io.net.perpid.tcp.out.bytes
do
    echo "=== report metric values for $metric ==="
    pminfo -f $metric 2>&1 | tee -a $here/$seq.full \
    | tee -a $seq.full \
    | _value_filter ${curlpid}
done

_pmdabcc_remove

status=0
exit
