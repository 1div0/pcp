#!/bin/sh
# PCP QA Test No. 1705
# Exercise the bpftrace PMDA - error conditions
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.bpftrace

_pmdabpftrace_check

status=1       # failure is the default!
$sudo rm -rf $tmp.* $seq.full

_prepare_pmda bpftrace
trap "_pmdabpftrace_cleanup; exit \$status" 0 1 2 3 15
_stop_auto_restart pmcd

# real QA test starts here
_pmdabpftrace_install

echo "=== bpftrace script without variabes ==="
pmstore bpftrace.control.register "// name: test1
tracepoint:raw_syscalls:sys_enter { }"
pminfo -f bpftrace.control.register | grep -q '"error": "no bpftrace variables or printf statements found, please include at least one variable or print statement in your script"' && echo OK
echo

echo "=== invalid probe ==="
pmstore bpftrace.control.register "// name: test2
does_not_exist { @c = count(); }"
pminfo -f bpftrace.control.register >> $here/$seq.full
_pmdabpftrace_wait_for_value bpftrace.scripts.test2.error "value \"Invalid provider: 'does_not_exist'\""
pminfo -f bpftrace.scripts.test2.exit_code
echo

echo "=== too many attached tracepoints ==="
pmstore bpftrace.control.register "// name: test3
kprobe:* { @c = count(); }"
pminfo -f bpftrace.control.register >> $here/$seq.full
_pmdabpftrace_wait_for_value bpftrace.scripts.test3.error "value \"Can't attach to [0-9]* probes because it exceeds the current limit of [0-9]* probes."
pminfo -f bpftrace.scripts.test3.exit_code
echo

echo "=== too much output ==="
pmstore bpftrace.control.register '// name: test4
profile:hz:9999 { printf("test") }'
pminfo -f bpftrace.control.register >> $here/$seq.full
_pmdabpftrace_wait_for_value bpftrace.scripts.test4.error "value \"BPFtrace output exceeds limit of 102400 bytes per second\""
pminfo -f bpftrace.scripts.test4.status
echo

echo "=== duplicate script name ==="
pmstore bpftrace.control.register "// name: test5
tracepoint:raw_syscalls:sys_enter { @x = count() }"
pmstore bpftrace.control.register "// name: test5
tracepoint:raw_syscalls:sys_enter { @x = count() }"
pminfo -f bpftrace.control.register | grep -q '"error": "Script name .* is already in use by another script."' && echo OK
echo

_pmdabpftrace_remove
status=0
exit
