QA output created by 938
pmRegisterDerived: name="event.flags" expr="anon(PM_TYPE_U32)"
derive_lex() -> type=L_ANON "anon"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "PM_TYPE_U32"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[0] event.flags = anon(PM_TYPE_U32)
Derived metric expr dump from <addr-0>...
expr node <addr-0> type=ANON left=<addr-1> right=(nil) save_last=0
expr node <addr-1> type=INTEGER left=(nil) right=(nil) save_last=0 [PM_TYPE_U32] master=1
pmRegisterDerived: name="event.missed" expr="anon(PM_TYPE_U32)"
derive_lex() -> type=L_ANON "anon"
derive_lex() -> type=L_LPAREN "("
derive_lex() -> type=L_NAME "PM_TYPE_U32"
derive_lex() -> type=L_RPAREN ")"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[1] event.missed = anon(PM_TYPE_U32)
Derived metric expr dump from <addr-2>...
expr node <addr-2> type=ANON left=<addr-3> right=(nil) save_last=0
expr node <addr-3> type=INTEGER left=(nil) right=(nil) save_last=0 [PM_TYPE_U32] master=1
Derived metric initialization from $PCP_DERIVED_CONFIG
pmLoadDerivedConfig("TMP.config")
pmRegisterDerived: name="a.m1" expr="sample.long.one == 1 ? sample.ulonglong.ten : sample.ulonglong.hundred"
derive_lex() -> type=L_NAME "sample.long.one"
derive_lex() -> type=L_EQ "=="
derive_lex() -> type=L_INTEGER "1"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.ulonglong.ten"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.ulonglong.hundred"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[2] a.m1 = sample.long.one == 1 ? sample.ulonglong.ten : sample.ulonglong.hundred
Derived metric expr dump from <addr-4>...
expr node <addr-4> type=QUEST left=<addr-5> right=<addr-8> save_last=0
expr node <addr-5> type=EQ left=<addr-6> right=<addr-7> save_last=0
expr node <addr-6> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=1
expr node <addr-7> type=INTEGER left=(nil) right=(nil) save_last=0 [1] master=1
expr node <addr-8> type=COLON left=<addr-9> right=<addr-10> save_last=0
expr node <addr-9> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulonglong.ten] master=1
expr node <addr-10> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulonglong.hundred] master=1
pmRegisterDerived: name="a.m2" expr="sample.long.one != 1 ? sample.ulonglong.ten : sample.ulonglong.hundred"
derive_lex() -> type=L_NAME "sample.long.one"
derive_lex() -> type=L_NEQ "!="
derive_lex() -> type=L_INTEGER "1"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.ulonglong.ten"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.ulonglong.hundred"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[3] a.m2 = sample.long.one != 1 ? sample.ulonglong.ten : sample.ulonglong.hundred
Derived metric expr dump from <addr-11>...
expr node <addr-11> type=QUEST left=<addr-12> right=<addr-15> save_last=0
expr node <addr-12> type=NEQ left=<addr-13> right=<addr-14> save_last=0
expr node <addr-13> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=1
expr node <addr-14> type=INTEGER left=(nil) right=(nil) save_last=0 [1] master=1
expr node <addr-15> type=COLON left=<addr-16> right=<addr-17> save_last=0
expr node <addr-16> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulonglong.ten] master=1
expr node <addr-17> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulonglong.hundred] master=1
pmRegisterDerived: name="a.m3" expr="sample.bin > 400 ? sample.bin-sample.bin : sample.bin"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_GT ">"
derive_lex() -> type=L_INTEGER "400"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_MINUS "-"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[4] a.m3 = sample.bin > 400 ? sample.bin-sample.bin : sample.bin
Derived metric expr dump from <addr-18>...
expr node <addr-18> type=QUEST left=<addr-19> right=<addr-22> save_last=0
expr node <addr-19> type=GT left=<addr-20> right=<addr-21> save_last=0
expr node <addr-20> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-21> type=INTEGER left=(nil) right=(nil) save_last=0 [400] master=1
expr node <addr-22> type=COLON left=<addr-23> right=<addr-26> save_last=0
expr node <addr-23> type=MINUS left=<addr-24> right=<addr-25> save_last=0
expr node <addr-24> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-25> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-26> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
pmRegisterDerived: name="a.m4" expr="sample.bin > 400 ? sample.long.ten : sample.bin"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_GT ">"
derive_lex() -> type=L_INTEGER "400"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.long.ten"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[5] a.m4 = sample.bin > 400 ? sample.long.ten : sample.bin
Derived metric expr dump from <addr-27>...
expr node <addr-27> type=QUEST left=<addr-28> right=<addr-31> save_last=0
expr node <addr-28> type=GT left=<addr-29> right=<addr-30> save_last=0
expr node <addr-29> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-30> type=INTEGER left=(nil) right=(nil) save_last=0 [400] master=1
expr node <addr-31> type=COLON left=<addr-32> right=<addr-33> save_last=0
expr node <addr-32> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.ten] master=1
expr node <addr-33> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
pmRegisterDerived: name="a.m5" expr="sample.long.one < 0 ? sample.bin-sample.bin : sample.bin"
derive_lex() -> type=L_NAME "sample.long.one"
derive_lex() -> type=L_LT "<"
derive_lex() -> type=L_INTEGER "0"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_MINUS "-"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[6] a.m5 = sample.long.one < 0 ? sample.bin-sample.bin : sample.bin
Derived metric expr dump from <addr-34>...
expr node <addr-34> type=QUEST left=<addr-35> right=<addr-38> save_last=0
expr node <addr-35> type=LT left=<addr-36> right=<addr-37> save_last=0
expr node <addr-36> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=1
expr node <addr-37> type=INTEGER left=(nil) right=(nil) save_last=0 [0] master=1
expr node <addr-38> type=COLON left=<addr-39> right=<addr-42> save_last=0
expr node <addr-39> type=MINUS left=<addr-40> right=<addr-41> save_last=0
expr node <addr-40> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-41> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-42> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
pmRegisterDerived: name="a.m6" expr="sample.bin!=100 && sample.bin!=900 && sample.bin!=500 ? sample.long.ten : sample.bin"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_NEQ "!="
derive_lex() -> type=L_INTEGER "100"
derive_lex() -> type=L_AND "&&"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_NEQ "!="
derive_lex() -> type=L_INTEGER "900"
derive_lex() -> type=L_AND "&&"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_NEQ "!="
derive_lex() -> type=L_INTEGER "500"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.long.ten"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[7] a.m6 = sample.bin!=100 && sample.bin!=900 && sample.bin!=500 ? sample.long.ten : sample.bin
Derived metric expr dump from <addr-43>...
expr node <addr-43> type=QUEST left=<addr-44> right=<addr-55> save_last=0
expr node <addr-44> type=AND left=<addr-45> right=<addr-52> save_last=0
expr node <addr-45> type=AND left=<addr-46> right=<addr-49> save_last=0
expr node <addr-46> type=NEQ left=<addr-47> right=<addr-48> save_last=0
expr node <addr-47> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-48> type=INTEGER left=(nil) right=(nil) save_last=0 [100] master=1
expr node <addr-49> type=NEQ left=<addr-50> right=<addr-51> save_last=0
expr node <addr-50> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-51> type=INTEGER left=(nil) right=(nil) save_last=0 [900] master=1
expr node <addr-52> type=NEQ left=<addr-53> right=<addr-54> save_last=0
expr node <addr-53> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-54> type=INTEGER left=(nil) right=(nil) save_last=0 [500] master=1
expr node <addr-55> type=COLON left=<addr-56> right=<addr-57> save_last=0
expr node <addr-56> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.ten] master=1
expr node <addr-57> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
pmRegisterDerived: name="a.m7" expr="sample.bin==100 || sample.bin==900 || sample.bin==500 ? sample.bin : sample.long.ten"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_EQ "=="
derive_lex() -> type=L_INTEGER "100"
derive_lex() -> type=L_OR "||"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_EQ "=="
derive_lex() -> type=L_INTEGER "900"
derive_lex() -> type=L_OR "||"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_EQ "=="
derive_lex() -> type=L_INTEGER "500"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.long.ten"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[8] a.m7 = sample.bin==100 || sample.bin==900 || sample.bin==500 ? sample.bin : sample.long.ten
Derived metric expr dump from <addr-58>...
expr node <addr-58> type=QUEST left=<addr-59> right=<addr-70> save_last=0
expr node <addr-59> type=OR left=<addr-60> right=<addr-67> save_last=0
expr node <addr-60> type=OR left=<addr-61> right=<addr-64> save_last=0
expr node <addr-61> type=EQ left=<addr-62> right=<addr-63> save_last=0
expr node <addr-62> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-63> type=INTEGER left=(nil) right=(nil) save_last=0 [100] master=1
expr node <addr-64> type=EQ left=<addr-65> right=<addr-66> save_last=0
expr node <addr-65> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-66> type=INTEGER left=(nil) right=(nil) save_last=0 [900] master=1
expr node <addr-67> type=EQ left=<addr-68> right=<addr-69> save_last=0
expr node <addr-68> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-69> type=INTEGER left=(nil) right=(nil) save_last=0 [500] master=1
expr node <addr-70> type=COLON left=<addr-71> right=<addr-72> save_last=0
expr node <addr-71> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-72> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.ten] master=1
pmRegisterDerived: name="a.err.m1" expr="sample.bin > 400 ? sample.longlong.ten : sample.bin"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_GT ">"
derive_lex() -> type=L_INTEGER "400"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.longlong.ten"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[9] a.err.m1 = sample.bin > 400 ? sample.longlong.ten : sample.bin
Derived metric expr dump from <addr-73>...
expr node <addr-73> type=QUEST left=<addr-74> right=<addr-77> save_last=0
expr node <addr-74> type=GT left=<addr-75> right=<addr-76> save_last=0
expr node <addr-75> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-76> type=INTEGER left=(nil) right=(nil) save_last=0 [400] master=1
expr node <addr-77> type=COLON left=<addr-78> right=<addr-79> save_last=0
expr node <addr-78> type=NAME left=(nil) right=(nil) save_last=0 [sample.longlong.ten] master=1
expr node <addr-79> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
pmRegisterDerived: name="a.err.m2" expr="sample.long.one ? sample.byte_ctr : sample.kbyte_ctr"
derive_lex() -> type=L_NAME "sample.long.one"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.byte_ctr"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.kbyte_ctr"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[10] a.err.m2 = sample.long.one ? sample.byte_ctr : sample.kbyte_ctr
Derived metric expr dump from <addr-80>...
expr node <addr-80> type=QUEST left=<addr-81> right=<addr-82> save_last=0
expr node <addr-81> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=1
expr node <addr-82> type=COLON left=<addr-83> right=<addr-84> save_last=0
expr node <addr-83> type=NAME left=(nil) right=(nil) save_last=0 [sample.byte_ctr] master=1
expr node <addr-84> type=NAME left=(nil) right=(nil) save_last=0 [sample.kbyte_ctr] master=1
pmRegisterDerived: name="a.err.m3" expr="sample.long.one ? sample.bin : sample.lights"
derive_lex() -> type=L_NAME "sample.long.one"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.lights"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[11] a.err.m3 = sample.long.one ? sample.bin : sample.lights
Derived metric expr dump from <addr-85>...
expr node <addr-85> type=QUEST left=<addr-86> right=<addr-87> save_last=0
expr node <addr-86> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=1
expr node <addr-87> type=COLON left=<addr-88> right=<addr-89> save_last=0
expr node <addr-88> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-89> type=NAME left=(nil) right=(nil) save_last=0 [sample.lights] master=1
pmRegisterDerived: name="a.err.m4" expr="sample.long.one ? sample.bin : sample.colour"
derive_lex() -> type=L_NAME "sample.long.one"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.bin"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.colour"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[12] a.err.m4 = sample.long.one ? sample.bin : sample.colour
Derived metric expr dump from <addr-90>...
expr node <addr-90> type=QUEST left=<addr-91> right=<addr-92> save_last=0
expr node <addr-91> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=1
expr node <addr-92> type=COLON left=<addr-93> right=<addr-94> save_last=0
expr node <addr-93> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=1
expr node <addr-94> type=NAME left=(nil) right=(nil) save_last=0 [sample.colour] master=1
pmRegisterDerived: name="a.err.m5" expr="sample.long.one ? sample.seconds : sample.ulong.ten"
derive_lex() -> type=L_NAME "sample.long.one"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.seconds"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.ulong.ten"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[13] a.err.m5 = sample.long.one ? sample.seconds : sample.ulong.ten
Derived metric expr dump from <addr-95>...
expr node <addr-95> type=QUEST left=<addr-96> right=<addr-97> save_last=0
expr node <addr-96> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=1
expr node <addr-97> type=COLON left=<addr-98> right=<addr-99> save_last=0
expr node <addr-98> type=NAME left=(nil) right=(nil) save_last=0 [sample.seconds] master=1
expr node <addr-99> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulong.ten] master=1
pmRegisterDerived: name="a.err.m6" expr="sample.long.one ? sample.byte_rate : sample.byte_rate_perhour"
derive_lex() -> type=L_NAME "sample.long.one"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.byte_rate"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.byte_rate_perhour"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[14] a.err.m6 = sample.long.one ? sample.byte_rate : sample.byte_rate_perhour
Derived metric expr dump from <addr-100>...
expr node <addr-100> type=QUEST left=<addr-101> right=<addr-102> save_last=0
expr node <addr-101> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=1
expr node <addr-102> type=COLON left=<addr-103> right=<addr-104> save_last=0
expr node <addr-103> type=NAME left=(nil) right=(nil) save_last=0 [sample.byte_rate] master=1
expr node <addr-104> type=NAME left=(nil) right=(nil) save_last=0 [sample.byte_rate_perhour] master=1
pmRegisterDerived: name="a.err.m7" expr="sample.long.one ? sample.long.hundred : sample.step"
derive_lex() -> type=L_NAME "sample.long.one"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.long.hundred"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.step"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[15] a.err.m7 = sample.long.one ? sample.long.hundred : sample.step
Derived metric expr dump from <addr-105>...
expr node <addr-105> type=QUEST left=<addr-106> right=<addr-107> save_last=0
expr node <addr-106> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=1
expr node <addr-107> type=COLON left=<addr-108> right=<addr-109> save_last=0
expr node <addr-108> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.hundred] master=1
expr node <addr-109> type=NAME left=(nil) right=(nil) save_last=0 [sample.step] master=1
pmRegisterDerived: name="a.err.m8" expr="sample.colour > 200 ? sample.ulong.hundred : sample.ulong.ten"
derive_lex() -> type=L_NAME "sample.colour"
derive_lex() -> type=L_GT ">"
derive_lex() -> type=L_INTEGER "200"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_NAME "sample.ulong.hundred"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_NAME "sample.ulong.ten"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[16] a.err.m8 = sample.colour > 200 ? sample.ulong.hundred : sample.ulong.ten
Derived metric expr dump from <addr-110>...
expr node <addr-110> type=QUEST left=<addr-111> right=<addr-114> save_last=0
expr node <addr-111> type=GT left=<addr-112> right=<addr-113> save_last=0
expr node <addr-112> type=NAME left=(nil) right=(nil) save_last=0 [sample.colour] master=1
expr node <addr-113> type=INTEGER left=(nil) right=(nil) save_last=0 [200] master=1
expr node <addr-114> type=COLON left=<addr-115> right=<addr-116> save_last=0
expr node <addr-115> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulong.hundred] master=1
expr node <addr-116> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulong.ten] master=1
pmRegisterDerived: name="a.err.m9" expr="sample.string.hullo ? 1 : 2"
derive_lex() -> type=L_NAME "sample.string.hullo"
derive_lex() -> type=L_QUEST "?"
derive_lex() -> type=L_INTEGER "1"
derive_lex() -> type=L_COLON ":"
derive_lex() -> type=L_INTEGER "2"
derive_lex() -> type=L_EOS ""
pmRegisterDerived: register metric[17] a.err.m9 = sample.string.hullo ? 1 : 2
Derived metric expr dump from <addr-117>...
expr node <addr-117> type=QUEST left=<addr-118> right=<addr-119> save_last=0
expr node <addr-118> type=NAME left=(nil) right=(nil) save_last=0 [sample.string.hullo] master=1
expr node <addr-119> type=COLON left=<addr-120> right=<addr-121> save_last=0
expr node <addr-120> type=INTEGER left=(nil) right=(nil) save_last=0 [1] master=1
expr node <addr-121> type=INTEGER left=(nil) right=(nil) save_last=0 [2] master=1
__dmopencontext(->ctx 0) called
__dmopencontext: bind metric[0] event.flags
Derived metric expr dump from <addr-122>...
expr node <addr-122> type=ANON left=<addr-123> right=(nil) save_last=0
    PMID: PM_ID_NULL (511.0.1 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-123> type=INTEGER left=(nil) right=(nil) save_last=0 [PM_TYPE_U32] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
__dmopencontext: bind metric[1] event.missed
Derived metric expr dump from <addr-124>...
expr node <addr-124> type=ANON left=<addr-125> right=(nil) save_last=0
    PMID: PM_ID_NULL (511.0.2 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-125> type=INTEGER left=(nil) right=(nil) save_last=0 [PM_TYPE_U32] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
__dmgetpmid: metric "a.m1" -> PMID 511.0.3
__dmopencontext: bind metric[2] a.m1
Derived metric expr dump from <addr-126>...
expr node <addr-126> type=QUEST left=<addr-127> right=<addr-130> save_last=0
    PMID: PM_ID_NULL (511.0.3 from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-127> type=EQ left=<addr-128> right=<addr-129> save_last=0
    PMID: PM_ID_NULL (29.0.10 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-128> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=0
    PMID: 29.0.10 (29.0.10 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-129> type=INTEGER left=(nil) right=(nil) save_last=0 [1] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-130> type=COLON left=<addr-131> right=<addr-132> save_last=0
    PMID: PM_ID_NULL (29.0.99 from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-131> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulonglong.ten] master=0
    PMID: 29.0.99 (29.0.99 from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-132> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulonglong.hundred] master=0
    PMID: 29.0.100 (29.0.100 from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
__dmgetpmid: metric "a.m2" -> PMID 511.0.4
__dmopencontext: bind metric[3] a.m2
Derived metric expr dump from <addr-133>...
expr node <addr-133> type=QUEST left=<addr-134> right=<addr-137> save_last=0
    PMID: PM_ID_NULL (511.0.4 from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-134> type=NEQ left=<addr-135> right=<addr-136> save_last=0
    PMID: PM_ID_NULL (29.0.10 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-135> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=0
    PMID: 29.0.10 (29.0.10 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-136> type=INTEGER left=(nil) right=(nil) save_last=0 [1] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-137> type=COLON left=<addr-138> right=<addr-139> save_last=0
    PMID: PM_ID_NULL (29.0.99 from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-138> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulonglong.ten] master=0
    PMID: 29.0.99 (29.0.99 from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-139> type=NAME left=(nil) right=(nil) save_last=0 [sample.ulonglong.hundred] master=0
    PMID: 29.0.100 (29.0.100 from pmDesc) numval: 0
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
__dmgetpmid: metric "a.m3" -> PMID 511.0.5
__dmopencontext: bind metric[4] a.m3
Derived metric expr dump from <addr-140>...
expr node <addr-140> type=QUEST left=<addr-141> right=<addr-144> save_last=0
    PMID: PM_ID_NULL (511.0.5 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-141> type=GT left=<addr-142> right=<addr-143> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-142> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-143> type=INTEGER left=(nil) right=(nil) save_last=0 [400] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-144> type=COLON left=<addr-145> right=<addr-148> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-145> type=MINUS left=<addr-146> right=<addr-147> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-146> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-147> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-148> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
__dmgetpmid: metric "a.m4" -> PMID 511.0.6
__dmopencontext: bind metric[5] a.m4
Derived metric expr dump from <addr-149>...
expr node <addr-149> type=QUEST left=<addr-150> right=<addr-153> save_last=0
    PMID: PM_ID_NULL (511.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-150> type=GT left=<addr-151> right=<addr-152> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-151> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-152> type=INTEGER left=(nil) right=(nil) save_last=0 [400] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-153> type=COLON left=<addr-154> right=<addr-155> save_last=0
    PMID: PM_ID_NULL (29.0.11 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-154> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.ten] master=0
    PMID: 29.0.11 (29.0.11 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-155> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
__dmgetpmid: metric "a.m5" -> PMID 511.0.7
__dmopencontext: bind metric[6] a.m5
Derived metric expr dump from <addr-156>...
expr node <addr-156> type=QUEST left=<addr-157> right=<addr-160> save_last=0
    PMID: PM_ID_NULL (511.0.7 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-157> type=LT left=<addr-158> right=<addr-159> save_last=0
    PMID: PM_ID_NULL (29.0.10 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-158> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.one] master=0
    PMID: 29.0.10 (29.0.10 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-159> type=INTEGER left=(nil) right=(nil) save_last=0 [0] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-160> type=COLON left=<addr-161> right=<addr-164> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-161> type=MINUS left=<addr-162> right=<addr-163> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-162> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-163> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-164> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
__dmgetpmid: metric "a.m6" -> PMID 511.0.8
__dmopencontext: bind metric[7] a.m6
Derived metric expr dump from <addr-165>...
expr node <addr-165> type=QUEST left=<addr-166> right=<addr-177> save_last=0
    PMID: PM_ID_NULL (511.0.8 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-166> type=AND left=<addr-167> right=<addr-174> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-167> type=AND left=<addr-168> right=<addr-171> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-168> type=NEQ left=<addr-169> right=<addr-170> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-169> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-170> type=INTEGER left=(nil) right=(nil) save_last=0 [100] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-171> type=NEQ left=<addr-172> right=<addr-173> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-172> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-173> type=INTEGER left=(nil) right=(nil) save_last=0 [900] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-174> type=NEQ left=<addr-175> right=<addr-176> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-175> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-176> type=INTEGER left=(nil) right=(nil) save_last=0 [500] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-177> type=COLON left=<addr-178> right=<addr-179> save_last=0
    PMID: PM_ID_NULL (29.0.11 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-178> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.ten] master=0
    PMID: 29.0.11 (29.0.11 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
expr node <addr-179> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
__dmgetpmid: metric "a.m7" -> PMID 511.0.9
__dmopencontext: bind metric[8] a.m7
Derived metric expr dump from <addr-180>...
expr node <addr-180> type=QUEST left=<addr-181> right=<addr-192> save_last=0
    PMID: PM_ID_NULL (511.0.9 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-181> type=OR left=<addr-182> right=<addr-189> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-182> type=OR left=<addr-183> right=<addr-186> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-183> type=EQ left=<addr-184> right=<addr-185> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-184> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-185> type=INTEGER left=(nil) right=(nil) save_last=0 [100] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-186> type=EQ left=<addr-187> right=<addr-188> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-187> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-188> type=INTEGER left=(nil) right=(nil) save_last=0 [900] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-189> type=EQ left=<addr-190> right=<addr-191> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-190> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-191> type=INTEGER left=(nil) right=(nil) save_last=0 [500] master=0
    PMID: PM_ID_NULL (PM_ID_NULL from pmDesc) numval: 0
    Data Type: 32-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: discrete  Units: none
expr node <addr-192> type=COLON left=<addr-193> right=<addr-194> save_last=0
    PMID: PM_ID_NULL (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-193> type=NAME left=(nil) right=(nil) save_last=0 [sample.bin] master=0
    PMID: 29.0.6 (29.0.6 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
expr node <addr-194> type=NAME left=(nil) right=(nil) save_last=0 [sample.long.ten] master=0
    PMID: 29.0.11 (29.0.11 from pmDesc) numval: 0
    Data Type: 32-bit int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
__dmgetpmid: metric "a.err.m1" -> PMID 511.0.10
Semantic error: derived metric a.err.m1: sample.longlong.ten : sample.bin: Different types for ternary operands
__dmgetpmid: metric "a.err.m2" -> PMID 511.0.11
Semantic error: derived metric a.err.m2: sample.byte_ctr : sample.kbyte_ctr: Different units or scale (space) for ternary operands
__dmgetpmid: metric "a.err.m3" -> PMID 511.0.12
Semantic error: derived metric a.err.m3: sample.bin : sample.lights: Different types for ternary operands
__dmgetpmid: metric "a.err.m4" -> PMID 511.0.13
Semantic error: derived metric a.err.m4: sample.bin : sample.colour: Different instance domains for ternary operands
__dmgetpmid: metric "a.err.m5" -> PMID 511.0.14
Semantic error: derived metric a.err.m5: sample.seconds : sample.ulong.ten: Different semantics for ternary operands
__dmgetpmid: metric "a.err.m6" -> PMID 511.0.15
Semantic error: derived metric a.err.m6: sample.byte_rate : sample.byte_rate_perhour: Different units or scale (time) for ternary operands
__dmgetpmid: metric "a.err.m7" -> PMID 511.0.16
Semantic error: derived metric a.err.m7: sample.long.hundred : sample.step: Different units or scale (count) for ternary operands
__dmgetpmid: metric "a.err.m8" -> PMID 511.0.17
Semantic error: derived metric a.err.m8: <expr> ? sample.ulong.hundred : sample.ulong.ten: Non-scalar ternary guard with scalar expressions
__dmgetpmid: metric "a.err.m9" -> PMID 511.0.18
Semantic error: derived metric a.err.m9: sample.string.hullo ? 1 : 2: Non-arithmetic operand for ternary guard
__dmtraverse: name="a" added "a.m1"
__dmtraverse: name="a" added "a.m2"
__dmtraverse: name="a" added "a.m3"
__dmtraverse: name="a" added "a.m4"
__dmtraverse: name="a" added "a.m5"
__dmtraverse: name="a" added "a.m6"
__dmtraverse: name="a" added "a.m7"
__dmtraverse: name="a", omitting invalid child "a.err.m1"
__dmtraverse: name="a", omitting invalid child "a.err.m2"
__dmtraverse: name="a", omitting invalid child "a.err.m3"
__dmtraverse: name="a", omitting invalid child "a.err.m4"
__dmtraverse: name="a", omitting invalid child "a.err.m5"
__dmtraverse: name="a", omitting invalid child "a.err.m6"
__dmtraverse: name="a", omitting invalid child "a.err.m7"
__dmtraverse: name="a", omitting invalid child "a.err.m8"
__dmtraverse: name="a", omitting invalid child "a.err.m9"
__dmgetpmid: metric "a.m1" -> PMID 511.0.3
__dmgetpmid: metric "a.m2" -> PMID 511.0.4
__dmgetpmid: metric "a.m3" -> PMID 511.0.5
__dmgetpmid: metric "a.m4" -> PMID 511.0.6
__dmgetpmid: metric "a.m5" -> PMID 511.0.7
__dmgetpmid: metric "a.m6" -> PMID 511.0.8
__dmgetpmid: metric "a.m7" -> PMID 511.0.9

a.m1
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
    value 10

a.m2
    Data Type: 64-bit unsigned int  InDom: PM_INDOM_NULL 0xffffffff
    Semantics: instant  Units: none
    value 100

a.m3
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
    inst [100 or "bin-100"] value 100
    inst [200 or "bin-200"] value 200
    inst [300 or "bin-300"] value 300
    inst [400 or "bin-400"] value 400
    inst [500 or "bin-500"] value 0
    inst [600 or "bin-600"] value 0
    inst [700 or "bin-700"] value 0
    inst [800 or "bin-800"] value 0
    inst [900 or "bin-900"] value 0

a.m4
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
    inst [100 or "bin-100"] value 100
    inst [200 or "bin-200"] value 200
    inst [300 or "bin-300"] value 300
    inst [400 or "bin-400"] value 400
    inst [500 or "bin-500"] value 10
    inst [600 or "bin-600"] value 10
    inst [700 or "bin-700"] value 10
    inst [800 or "bin-800"] value 10
    inst [900 or "bin-900"] value 10

a.m5
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
    inst [100 or "bin-100"] value 100
    inst [200 or "bin-200"] value 200
    inst [300 or "bin-300"] value 300
    inst [400 or "bin-400"] value 400
    inst [500 or "bin-500"] value 500
    inst [600 or "bin-600"] value 600
    inst [700 or "bin-700"] value 700
    inst [800 or "bin-800"] value 800
    inst [900 or "bin-900"] value 900

a.m6
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
    inst [100 or "bin-100"] value 100
    inst [200 or "bin-200"] value 10
    inst [300 or "bin-300"] value 10
    inst [400 or "bin-400"] value 10
    inst [500 or "bin-500"] value 500
    inst [600 or "bin-600"] value 10
    inst [700 or "bin-700"] value 10
    inst [800 or "bin-800"] value 10
    inst [900 or "bin-900"] value 900

a.m7
    Data Type: 32-bit int  InDom: 29.2 0x7400002
    Semantics: instant  Units: none
    inst [100 or "bin-100"] value 100
    inst [200 or "bin-200"] value 10
    inst [300 or "bin-300"] value 10
    inst [400 or "bin-400"] value 10
    inst [500 or "bin-500"] value 500
    inst [600 or "bin-600"] value 10
    inst [700 or "bin-700"] value 10
    inst [800 or "bin-800"] value 10
    inst [900 or "bin-900"] value 900
expecting ...
a.m1		10
a.m2		100
a.m3		100 200 300 400 0 0 0 0 0
a.m4		100 200 300 400 10 10 10 10 10
a.m5		100 200 300 400 500 600 700 800 900
a.m6		100 10 10 10 500 10 10 10 900
a.m7		100 10 10 10 500 10 10 10 900
a.err.m1	<expr2> and <expr3> different types
a.err.m2	<expr2> and <expr3> different units (space)
a.err.m3	<expr2> and <expr3> different types
a.err.m4	<expr2> and <expr3> different indoms
a.err.m5	<expr2> and <expr3> different semantics
a.err.m6	<expr2> and <expr3> different units (time)
a.err.m7	<expr2> and <expr3> different units (count)
a.err.m8	<expr1> with indom, <expr2> and <expr3> singular
a.err.m9	<expr1> not arithmetic
