#!/bin/sh
# PCP QA Test No. 1388
# Exercise PMWEBAPI mandatory authentication mode.
#
# Copyright (c) 2017,2019 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

. ./common.secure

_notrun "Work in progress transition to pmproxy"
which curl >/dev/null 2>&1 || _notrun "No curl binary installed"

full_hostname=`hostname`

sasl_notrun_checks saslpasswd2 sasldblistusers2
$pluginviewer -a | grep 'Plugin "sasldb"' >/dev/null
test $? -eq 0 || _notrun "SASL sasldb auxprop plugin unavailable"
$pluginviewer -c | grep 'Plugin "plain"' >/dev/null 2>&1
test $? -eq 0 || _notrun 'No client support for plain authentication'
$pluginviewer -s | grep 'Plugin "plain"' >/dev/null 2>&1
test $? -eq 0 || _notrun 'No server support for plain authentication'

$sudo rm -f $tmp.* $seq.full

signal=$PCP_BINADM_DIR/pmsignal
status=1	# failure is the default!

_cleanup()
{
    cd $here

    # restore any modified pmcd and pmproxy configuration files
    _restore_config $PCP_SASLCONF_DIR/pmcd.conf

    _service pmcd stop 2>&1 | _filter_pmcd_stop
    _service pmcd start 2>&1 | _filter_pmcd_start
    _wait_for_pmcd

    _service pmproxy stop 2>&1 | _filter_pmproxy_stop
    _service pmproxy start 2>&1 | _filter_pmproxy_start
    _wait_for_pmproxy

    $sudo rm -f $tmp.*
}

trap "_cleanup; exit \$status" 0 1 2 3 15

_filter_listusers2()
{
    sed \
        -e "s/^$username/USER/" \
        -e "s/@$full_hostname:/@HOST:/" \
        -e "s/@$hostname:/@HOST:/"
}

_filter_context()
{
    sed -e 's/: [0-9][0-9]*/: CTX/g'
}

# start pmcd in sasldb authenticating mode
_save_config $PCP_SASLCONF_DIR/pmcd.conf
echo 'mech_list: plain' >$tmp.sasl
echo "sasldb_path: $tmp.passwd.db" >>$tmp.sasl
$sudo cp $tmp.sasl $PCP_SASLCONF_DIR/pmcd.conf
$sudo chown pcp:pcp $PCP_SASLCONF_DIR/pmcd.conf
ls -l $PCP_SASLCONF_DIR/pmcd.conf >>$seq.full
$sudo -u pcp cat $PCP_SASLCONF_DIR/pmcd.conf >>$seq.full

echo "Creating temporary sasldb, add user running QA to it" | tee -a $seq.full
echo y | saslpasswd2 -p -a pmcd -f $tmp.passwd.db $username

echo "Verify saslpasswd2 has successfully added a new user" | tee -a $seq.full
sasldblistusers2 -f $tmp.passwd.db \
| tee -a $seq.full \
| _filter_listusers2

echo "Start pmcd with this shiny new sasldb"
_service pmcd restart 2>&1 | tee -a $seq.full >$tmp.out
_wait_for_pmcd

if which systemctl >/dev/null 2>&1
then
    $sudo systemctl daemon-reload
fi

echo "Start pmproxy with mandatory authentication"
_service pmproxy stop 2>&1 | _filter_pmproxy_stop
webport=`_find_free_port`
$PCP_BINADM_DIR/pmproxy -f $webargs -p $webport -l $tmp.out -C &
webpid=$!
echo "pid=$webpid" >>$seq.full
echo "webport=$webport" >>$seq.full
echo "webargs=$webargs" >>$seq.full

_wait_for_pmproxy $webport

echo && echo "=== pmproxy no authentication (expect errors) ==="
curl -s -S "http://localhost:44323/pmapi/context?hostspec=localhost"
echo
curl -s -S "http://localhost:44323/pmapi/context?hostspec=localhost%3Fusername%3Dbob"
echo
curl -s -S "http://localhost:44323/pmapi/context?hostspec=localhost%3Fpassword%3Dbib"
echo

echo && echo "=== pmproxy with authentication (expect success) ==="
curl -s -S "http://localhost:44323/pmapi/context?hostspec=localhost%3Fusername%3D$username%26password%3Dy" 2>&1 | _filter_context
echo
curl -s -S "http://localhost:44323/pmapi/context?hostspec=localhost%3Fpassword%3Dy%26username%3D$username" 2>&1 | _filter_context
echo

echo >>$here/$seq.full
echo "=== pmproxy log ===" >>$here/$seq.full
cat $PCP_LOG_DIR/pmproxy/pmproxy.log >>$here/$seq.full

status=0
exit
